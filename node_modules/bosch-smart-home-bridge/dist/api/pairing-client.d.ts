import { Logger } from '../logger';
import { Observable } from 'rxjs';
import { AbstractBshcClient } from './abstract-bshc-client';
import { BshbResponse } from "../bshb-response";
import { BshbCallOptions } from "../bshb-call-options";
/**
 * This client is only used for the pairing of the client to Bosch Smart Home Controller.
 *
 * @author Christopher Holomek
 * @since 26.09.2019
 */
export declare class PairingClient extends AbstractBshcClient {
    /**
     * Create a new {@link PairingClient}
     * @param host
     *        host name / ip address of BSHC
     * @param logger
     *        logger to use
     */
    constructor(host: string, logger: Logger);
    private static PAIR_PATH;
    /**
     * Send a pairing request to BSHC
     *
     * @param identifier
     *        unique identifier of certificate / client
     * @param name
     *        name of the client (will be displayed in BSH app
     * @param certificate
     *        CertificateDefinition to use (base64 encoded with header / footer)
     * @param systemPassword
     *        system password of BSHC
     * @param bshbCallOptions
     *        define custom headers, etc. Some values may be overwritten. E.g. host
     */
    sendPairingRequest(identifier: string, name: string, certificate: string, systemPassword: string, bshbCallOptions?: BshbCallOptions): Observable<BshbResponse<{
        url: string;
        token: string;
    }>>;
}
