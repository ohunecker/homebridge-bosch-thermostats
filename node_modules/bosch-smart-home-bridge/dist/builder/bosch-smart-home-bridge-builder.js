"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var logger_1 = require("../logger");
var bosch_smart_home_bridge_1 = require("../bosch-smart-home-bridge");
/**
 * Builder for creating BoschSmartHomeBridge to make sure that properties are correctly set.
 *
 * @author Christopher Holomek
 * @since 28.11.2019
 */
var BoschSmartHomeBridgeBuilder = /** @class */ (function () {
    /**
     * Hide constructor
     */
    function BoschSmartHomeBridgeBuilder() {
        this._host = undefined;
        this._clientCert = undefined;
        this._clientPrivateKey = undefined;
        this._logger = new logger_1.DefaultLogger();
        // Hide constructor
    }
    /**
     * Create a new instance of a builder
     */
    BoschSmartHomeBridgeBuilder.builder = function () {
        return new BoschSmartHomeBridgeBuilder();
    };
    Object.defineProperty(BoschSmartHomeBridgeBuilder.prototype, "host", {
        /**
         * Get host name / ip address of BSHC
         */
        get: function () {
            return this._host;
        },
        enumerable: true,
        configurable: true
    });
    BoschSmartHomeBridgeBuilder.prototype.withHost = function (host) {
        this._host = host;
        return this;
    };
    Object.defineProperty(BoschSmartHomeBridgeBuilder.prototype, "clientCert", {
        /**
         * Get client certificate (base64)
         */
        get: function () {
            return this._clientCert;
        },
        enumerable: true,
        configurable: true
    });
    BoschSmartHomeBridgeBuilder.prototype.withClientCert = function (clientCert) {
        this._clientCert = clientCert;
        return this;
    };
    Object.defineProperty(BoschSmartHomeBridgeBuilder.prototype, "clientPrivateKey", {
        /**
         * Get client private key (base64)
         */
        get: function () {
            return this._clientPrivateKey;
        },
        enumerable: true,
        configurable: true
    });
    BoschSmartHomeBridgeBuilder.prototype.withClientPrivateKey = function (clientPrivateKey) {
        this._clientPrivateKey = clientPrivateKey;
        return this;
    };
    Object.defineProperty(BoschSmartHomeBridgeBuilder.prototype, "logger", {
        /**
         * Get logger
         */
        get: function () {
            return this._logger;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Set logger to use
     * @param logger
     *        logger to use
     */
    BoschSmartHomeBridgeBuilder.prototype.withLogger = function (logger) {
        this._logger = logger;
        return this;
    };
    /**
     * Build {@link BoschSmartHomeBridge}. Required properties are: <br>
     *     - host <br>
     *     - identifier <br>
     *     - clientCert <br>
     *     - clientPrivateKey <br>
     */
    BoschSmartHomeBridgeBuilder.prototype.build = function () {
        if (!this.host) {
            throw new Error("host is a required property. withHost must be called with a suitable value.");
        }
        if (!this.clientCert) {
            throw new Error("clientCert is a required property. withClientCert must be called with a suitable value.");
        }
        if (!this.clientPrivateKey) {
            throw new Error("clientPrivateKey is a required property. withClientPrivateKey must be called with a suitable value");
        }
        return new bosch_smart_home_bridge_1.BoschSmartHomeBridge(this);
    };
    return BoschSmartHomeBridgeBuilder;
}());
exports.BoschSmartHomeBridgeBuilder = BoschSmartHomeBridgeBuilder;
